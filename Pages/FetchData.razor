@page "/fetchdata"
@inject HttpClient Http

@if (main == null)
{
    <p><em>Loading...hmm</em></p>
}
else
{


    <div class="mb-2 p-3">
        <select class="form-control" @bind="League" @onclick="@GetDataAsync">
            <option selected disabled value="-1"> Choose a Football League!</option>
            <option value=2021> English Premier League</option>
            <option value=2002> German Bundesliga</option>
            <option value=PD> Spanish La Liga</option>
            <option value=SA> Italian Serie A</option>
            <option value=FL1> French Ligue 1</option>
        </select>
    </div>

    <table class="table">
        <thead>
            <tr>
                <th>Position</th>
                <th>Club</th>
                <th>Played</th>
                <th>Won</th>
                <th>Drawn</th>
                <th>Lost</th>
                <th>GF</th>
                <th>GA</th>
                <th>GD</th>
                <th>Points</th>
                <th>Form</th>
            </tr>
        </thead>
        <tbody>

            @for (int i = 0; i < main.standings.Count; i++)
            {
                @for (int j = 0; j < main.standings[i].table.Count; j++)
                {
                    <tr>
                        <td>@main.standings[i].table[j].position</td>
                        <td> <img class="resize" src=@main.standings[i].table[j].team.crestUrl style="width:2.3em; height:3em;"> &#8203; @main.standings[i].table[j].team.name</td>
                        <td>@main.standings[i].table[j].playedGames</td>
                        <td>@main.standings[i].table[j].won</td>
                        <td>@main.standings[i].table[j].draw</td>
                        <td>@main.standings[i].table[j].lost</td>
                        <td>@main.standings[i].table[j].goalsFor</td>
                        <td>@main.standings[i].table[j].goalsAgainst</td>
                        <td>@main.standings[i].table[j].goalDifference</td>
                        <td>@main.standings[i].table[j].points</td>
                        <td>@main.standings[i].table[j].form</td>
                    </tr>
                }
            }


        </tbody>
    </table>

}

@code {
    private Root main;
    private Boolean found;
    private int count;
    private string errormessage;
    private string League = "2021";

    private async Task GetDataAsync()
    {
        try
        {
            string uri = "https://api.football-data.org/v2/competitions/" + League + "/standings?standingType=TOTAL";
            main = await Http.GetJsonAsync<Root>(uri);
            found = true;
            errormessage = String.Empty;
        }
        catch (Exception e)
        {

            found = false;
            errormessage = e.Message;
        }
    }


    protected override async Task OnInitializedAsync()
    {
        await GetDataAsync();
    }


    public class Filters
    {
    }

    public class Area
    {
        public int id { get; set; }
        public string name { get; set; }
    }

    public class Competition
    {
        public int id { get; set; }
        public Area area { get; set; }
        public string name { get; set; }
        public string code { get; set; }
        public string plan { get; set; }
        public DateTime lastUpdated { get; set; }
    }

    public class Season
    {
        public int id { get; set; }
        public string startDate { get; set; }
        public string endDate { get; set; }
        public int currentMatchday { get; set; }
        public object winner { get; set; }
    }

    public class Team
    {
        public int id { get; set; }
        public string name { get; set; }
        public string crestUrl { get; set; }
    }

    public class Table
    {
        public int position { get; set; }
        public Team team { get; set; }
        public int playedGames { get; set; }
        public string form { get; set; }
        public int won { get; set; }
        public int draw { get; set; }
        public int lost { get; set; }
        public int points { get; set; }
        public int goalsFor { get; set; }
        public int goalsAgainst { get; set; }
        public int goalDifference { get; set; }
    }

    public class Standing
    {
        public string stage { get; set; }
        public string type { get; set; }
        public object group { get; set; }
        public List<Table> table { get; set; }
    }

    public class Root
    {
        public Filters filters { get; set; }
        public Competition competition { get; set; }
        public Season season { get; set; }
        public List<Standing> standings { get; set; }
    }


}

}
